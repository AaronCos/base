<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sswh.front.dao.IFrontUserDao">

    <insert id="registUser" parameterType="com.sswh.front.entity.FrontUserEntity">
        <!--<selectKey resultType="java.lang.Integer" keyProperty="iid" keyColumn="t_iid">
            select t_iid from
        </selectKey>-->
        INSERT INTO frontuser(loginname,username,password,password_salt,email,mobile,sex,birthday,identity,province,city,district,school,grade)
        VALUES(#{loginname},#{username},#{password},#{password_salt},#{email},#{mobile},#{sex},#{birthday},#{identity},#{province},#{city},#{district},#{school},#{grade});
    </insert>
    <update id="updateByLoginname">
        update frontuser
        <trim prefix="set" suffixOverrides=",">
            <if test="username!=null">username=#{username},</if>
            <if test="password!=null">password=#{password},</if>
            <if test="password_salt!=null">password_salt=#{password_salt},</if>
        </trim>
        loginname = #{loginname}

    </update>
    <update id="updateByUserIid">
          update frontuser
        <trim prefix="set" suffixOverrides=",">
            <if test="username!=null">username=#{username},</if>
            <if test="password!=null">password=#{password},</if>
            <if test="password_salt!=null">password_salt=#{password_salt},</if>
        </trim>
        <where>
            iid = #{iid}
        </where>
    </update>
    <update id="updateStatusOrIsStudent">
        update frontuser set ${name} = #{state} where iid = #{iid}
    </update>
    <update id="editUser" parameterType="com.sswh.front.entity.FrontUserEntity">
        update frontuser set username = #{username},email = #{email},mobile = #{mobile},sex = #{sex},birthday=#{birthday},identity = #{identity},province = #{province},city = #{city},district = #{district},school = #{school},grade = #{grade} where iid = #{iid}
    </update>

    <delete id="deleteByUserId" parameterType="int">
        DELETE FROM FRONTUSER
        <where>
            iid=#{iid}
        </where>
    </delete>
    <delete id="deleteFrontUser">delete from frontuser where iid  in
        <foreach item="item" collection="ids.split(',')" separator="," open="(" close=")" index="">
            ${item}
        </foreach>   </delete>

    <select id="getPasswordByLoginame"  resultType="string">
        SELECT password FROM FRONTUSER
        <where>
            loginname = #{loginname}
        </where>
    </select>

    <select id="getPasswordSaltByLoginname"  resultType="string">
        SELECT password_salt FROM FRONTUSER
        <where>
            loginname = #{loginname}
        </where>
    </select>

    <select id="findCountByLoginname"  resultType="int">
        SELECT COUNT(*) FROM frontuser
        <where>
            loginname = #{loginname}
        </where>
    </select>

    <select id="findByLoginName" resultType="com.sswh.front.entity.FrontUserEntity">
        SELECT iid,loginname,username,password,password_salt FROM frontuser
        <where>
            loginname like #{%loginname%}
        </where>
    </select>
    <select id="findAllFrontUser" resultType="com.sswh.front.entity.FrontUserEntity">
#         SELECT iid,username,email,sex,city,sign,experience,ip,logins,jointime FROM frontuser
         SELECT `iid`, `loginname`, `username`, `password`, `password_salt`, `sex`, `birthday`, `identity`, `email`, `mobile`, `status`, `code`, `year`, `month`, `day`, `city`, `sign`, `experience`, `ip`, `logins`, `jointime`, `isstudent`,grade, concat(province,city,district) address FROM frontuser
    </select>
    <select id="findFrontUsers" resultType="com.sswh.front.entity.FrontUserEntity">
        SELECT iid, loginname, username, password, password_salt, sex, birthday, identity, email, mobile,  status, code, year, month, day, city, sign, experience, ip, logins, jointime, isstudent,grade, concat(province,city,district) address,school FROM frontuser
        where 1=1
        <if test="start != '' and start !=null ">
          and  jointime &gt;= #{start}
        </if>

        <if test="end != '' and end != null ">
          and  jointime &lt;= #{end}
        </if>

        <if test="username != '' and username != null ">
            and   username like  "%"#{username}"%"
        </if>

        limit ${page},${limit}

    </select>
    <select id="findFrontUsersCount" resultType="java.lang.Integer">
        SELECT count(*) FROM frontuser
        where 1=1
        <if test="start != '' and start !=null ">
            and  jointime &gt;= #{start}
        </if>

        <if test="end != '' and end != null ">
            and  jointime &lt;= #{end}
        </if>

        <if test="username != '' and username != null ">
            and   username like  "%"#{username}"%"
        </if>

    </select>
    <select id="findFrontUserByIid" resultType="com.sswh.front.entity.FrontUserEntity">
        select  * from frontuser where iid = #{iid}
    </select>
    <select id="findFrontUsersByName" resultType="java.lang.Integer">
        select count(*) from frontuser where username = #{username}
    </select>
</mapper>
